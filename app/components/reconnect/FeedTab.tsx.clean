import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { feedItems } from '../../data/reconnectData';
import { useTheme } from '../../hooks/useTheme';
import { LinearGradient } from 'expo-linear-gradient';
import { Ionicons } from '@expo/vector-icons';

interface FeedQuoteCardProps {
  quote: string;
  author: string;
  onNext: () => void;
  onPrev: () => void;
  currentIndex: number;
  total: number;
}

const FeedQuoteCard: React.FC<FeedQuoteCardProps> = ({ 
  quote, 
  author, 
  onNext, 
  onPrev, 
  currentIndex, 
  total 
}) => {
  const { colors } = useTheme();

  return (
    <View style={styles.cardContainer}>
      <LinearGradient
        colors={[colors.card, colors.cardMuted]}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 1 }}
        style={styles.card}
      >
        <View style={styles.navigationButtons}>
          <TouchableOpacity onPress={onPrev} style={styles.navButton}>
            <Ionicons name="chevron-back" size={24} color={colors.text} />
          </TouchableOpacity>
          <TouchableOpacity onPress={onNext} style={styles.navButton}>
            <Ionicons name="chevron-forward" size={24} color={colors.text} />
          </TouchableOpacity>
        </View>
        
        <Text style={[styles.quote, { color: colors.text }]}>"{quote}"</Text>
        <Text style={[styles.author, { color: colors.textSecondary }]}>— {author}</Text>

        <View style={styles.actionButtons}>
          <TouchableOpacity style={styles.actionButton}>
            <Text style={[styles.actionButtonText, { color: colors.text }]}>♡ Favorite</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.actionButton}>
            <Text style={[styles.actionButtonText, { color: colors.text }]}>Share</Text>
          </TouchableOpacity>
        </View>

        <View style={styles.pagination}>
          {Array.from({ length: total }).map((_, index) => (
            <View
              key={index}
              style={[
                styles.paginationDot,
                {
                  backgroundColor: index === currentIndex ? colors.accent : colors.textMuted,
                  width: index === currentIndex ? 24 : 8,
                }
              ]}
            />
          ))}
        </View>
      </LinearGradient>
    </View>
  );
};

const FeedTab: React.FC = () => {
  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);
  const { colors } = useTheme();

  const handleNext = () => {
    setCurrentQuoteIndex((prev) => (prev + 1) % feedItems.length);
  };

  const handlePrev = () => {
    setCurrentQuoteIndex((prev) => (prev - 1 + feedItems.length) % feedItems.length);
  };

  return (
    <View style={[styles.container, { backgroundColor: colors.background }]}>
      <View style={styles.header}>
        <Text style={[styles.title, { color: colors.text }]}>Reconnect</Text>
        <Text style={[styles.subtitle, { color: colors.textSecondary }]}>
          Grow through guided journeys, projects, and community connection
        </Text>
      </View>
      
      <FeedQuoteCard
        quote={feedItems[currentQuoteIndex].quote}
        author={feedItems[currentQuoteIndex].author}
        onNext={handleNext}
        onPrev={handlePrev}
        currentIndex={currentQuoteIndex}
        total={feedItems.length}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  header: {
    marginBottom: 24,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    lineHeight: 24,
  },
  cardContainer: {
    marginVertical: 16,
  },
  card: {
    borderRadius: 20,
    padding: 24,
    marginHorizontal: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 10,
    elevation: 5,
    position: 'relative',
  },
  navigationButtons: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    position: 'absolute',
    top: '50%',
    left: -16,
    right: -16,
    zIndex: 1,
  },
  navButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.1)',
  },
  quote: {
    fontSize: 24,
    fontWeight: '500',
    textAlign: 'center',
    marginVertical: 24,
    lineHeight: 36,
  },
  author: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 24,
  },
  actionButtons: {
    flexDirection: 'row',
    justifyContent: 'center',
    gap: 16,
    marginBottom: 24,
  },
  actionButton: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    borderWidth: 1,
    borderColor: 'rgba(255, 255, 255, 0.2)',
  },
  actionButtonText: {
    fontSize: 14,
    fontWeight: '500',
  },
  pagination: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    gap: 8,
  },
  paginationDot: {
    height: 8,
    borderRadius: 4,
  },
});

export default FeedTab;
